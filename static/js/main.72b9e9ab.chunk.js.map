{"version":3,"sources":["redux/actions.js","components/TodoInput.js","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducer.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","TodoInput","useState","name","setName","dispatch","useDispatch","className","value","onChange","e","target","type","onClick","todo","id","uuid","payload","TodoItem","editable","setEditable","console","log","length","placeholder","updateTodo","todoId","TodoList","todos","useSelector","state","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","newTodos","action","push","filter","index","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72b9e9ab.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\nexport function addTodo(todo) {\n\treturn {\n\t\ttype: ADD_TODO,\n\t\tpayload: todo,\n\t}\n};\n\nexport function deleteTodo(todoId) {\n\treturn {\n\t\ttype: DELETE_TODO,\n\t\tpayload: todoId\n\t}\n};\n\nexport function updateTodo(todo) {\n\treturn {\n\t\ttype: UPDATE_TODO,\n\t\tpayload: todo\n\t}\n};\n","import React, {useState} from 'react'\nimport {addTodo} from '../redux/actions'\nimport {v1 as uuid} from 'uuid';\nimport {useDispatch} from 'react-redux';\n\nfunction TodoInput() {\n\tlet [name, setName] = useState();\n\tlet dispatch = useDispatch();\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>TodoInput</h3>\n\t\t\t<div className=\"row m-2\">\n\t\t\t\t<input\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e)=> setName(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"col form-control\"\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\tdispatch(addTodo({\n\t\t\t\t\t\t\tid: uuid(),\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tsetName(\"\");\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"btn btn-primary mx-2\">Add</button>\n\t\t\t</div>\n\t\t</div>\n\t\t\t)\n}\n\nexport default TodoInput\n","import {deleteTodo, updateTodo} from '../redux/actions';\nimport React, {useState} from 'react'\nimport {useDispatch} from 'react-redux';\n\nfunction TodoItem({todo}) {\n\tconst [editable, setEditable] = useState(false);\n\tconsole.log(todo);\n\tconst [name, setName] = useState(todo.name);\n\n\tlet dispatch = useDispatch();\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"row mx-2 align-items-center\">\n\t\t\t\t<div>#{todo.id.length > 1 ? todo.id[2] : todo.id}</div>\n\t\t\t\t<div className=\"col\">\n\t\t\t\t\t{editable ?\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Write text...\" value={name} onChange={(e)=> setName(e.target.value)} />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<h4>{todo.name}</h4>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<button className=\"btn btn-primary m-2\" onClick={()=> {\n\t\t\t\t\tdispatch(updateTodo({\n\t\t\t\t\t\t...todo,\n\t\t\t\t\t\tname: name\n\t\t\t\t\t}));\n\t\t\t\t\tif(editable) {\n\t\t\t\t\t\tsetName(todo.name);\n\t\t\t\t\t}\n\t\t\t\t\tsetEditable(!editable);\n\t\t\t\t}}>\n\t\t\t\t\t{editable ? \"Update\" : \"Edit\"}\n\t\t\t\t</button>\n\t\t\t\t<button className=\"btn btn-danger m-2\" onClick={()=> dispatch(deleteTodo(todo.id)) }>Delete</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default TodoItem\n","import React from 'react'\nimport TodoItem from './TodoItem'\nimport {useSelector} from 'react-redux';\n\nfunction TodoList() {\n\tlet todos = useSelector(state => state);\n\tconsole.log(todos);\n\treturn (\n\t\t<div className=\"my-4\">\n\t\t\t{todos.map(todo => {\n\t\t\t\treturn <TodoItem todo={todo} key={todo.id} />\n\t\t\t})}\n\t\t\t{ /*\n\t\t\t\t<TodoItem />\n\t\t\t\t<TodoItem />\n\t\t\t\t<TodoItem />\n\t\t\t\t<TodoItem />\n\t\t\t\t<TodoItem />\n\t\t\t */\n\t\t\t}\n\t\t</div>\n\t)\n}\nexport default TodoList\n","import './App.css';\nimport TodoInput from './components/TodoInput';\nimport TodoList from './components/TodoList';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App m-5\">\n      <TodoInput />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let todos = [\n\t{\n\t\tid: 1,\n\t\tname: \"One\",\n\t},\n\t{\n\t\tid: 2,\n\t\tname: \"Two\",\n\t},\n\t{\n\t\tid: 3,\n\t\tname: \"Three\",\n\t},\n]\n","import {createStore} from 'redux';\nimport {reducer} from './reducer'\n\nexport let store = createStore(reducer);\n\n","import {ADD_TODO, DELETE_TODO, UPDATE_TODO} from './actions';\nimport {todos} from './states';\n\nexport let reducer = (state=todos, action) => {\n\tlet newTodos;\n\n\tswitch(action.type) {\n\t\tcase ADD_TODO:\n\t\t\tnewTodos = [...state];\n\t\t\tnewTodos.push(action.payload);\n\t\t\treturn newTodos;\n\t\tcase DELETE_TODO:\n\t\t\tnewTodos = [...state];\n\t\t\tnewTodos = newTodos.filter(todo=>todo.id !== action.payload);\n\t\t\treturn newTodos;\n\t\tcase UPDATE_TODO:\n\t\t\tnewTodos = [...state];\n\n\t\t\t// let index = newTodos.indexOf(action.payload);\n\t\t\t// let index = newTodos.findIndex(action.payload.id);\n\t\t\tlet index = -1;\n\t\t\tfor(let i = 0; i<newTodos.length; i++) {\n\t\t\t\tindex++;\n\t\t\t\tif(newTodos[i].id === action.payload.id) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(index !== -1) {\n\t\t\t\tnewTodos[index] = action.payload;\n\t\t\t\tconsole.log(newTodos);\n\t\t\t\treturn newTodos;\n\t\t\t}\n\t\t\treturn state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n\t  <Provider store={store}>\n    \t<App />\n\t  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}